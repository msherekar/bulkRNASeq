# Create a minimal test configuration
input:
  fastq_dir: "tests/data/fastq"
  sample_sheet: "/Users/mukulsherekar/pythonProject/bulkRNASeq-Project/tests/data/sample_sheet.csv"

output:
  results_dir: "tests/data/results"
  qc_dir: "tests/data/results/qc"
  aligned_dir: "tests/data/results/aligned"
  counts_dir: "tests/data/results/counts"

genome:
  # GTF annotation file
  gtf_file: "/Users/mukulsherekar/pythonProject/bulkRNASeq-Project/genome/gencode.v38.annotation.gtf"
  # Reference genome FASTA
  genome_fasta: "/Users/mukulsherekar/pythonProject/bulkRNASeq-Project/genome/GRCh38.p13.genome.fa"
  # Transcriptome FASTA
  transcriptome_fasta: "/Users/mukulsherekar/pythonProject/bulkRNASeq-Project/genome/gencode.v47.transcripts.fa.gz"

aligners:
  hisat2:
    # HISAT2 index prefix (path without .X.ht2 extension)
    index_prefix: "/Users/mukulsherekar/pythonProject/bulkRNASeq-Project/tests/data/genome/hisat2_index/genome"
  kallisto:
    # Kallisto index
    index: "/Users/mukulsherekar/pythonProject/bulkRNASeq-Project/genome/kallisto_index"

parameters:
  step: "all"
  threads: 8
  memory: "8G"
  # Specify which aligner to use: "hisat2" or "kallisto"
  aligner: "hisat2"
  # Quality control parameters
  min_quality: 20
  min_length: 50
  # Strandedness: "yes", "no", or "reverse"
  stranded: "reverse"
  paired_end: false  # Set to false for single-end data 

pipeline_steps:
  - qc
  - alignment
  - quantification
  - multiqc  # For final QC report 