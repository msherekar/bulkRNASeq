# KALLISTO
$ /Users/mukulsherekar/yes/envs/rnaseq/bin/kallisto quant -i /Users/mukulsherekar/pythonProject/bulkRNASeq-Project/genome/kallisto_index -o tests/data/results/kallisto --single -l 200 -s 20 tests/data/raw_fastq/pranay.fq.gz

# OUTPUT of indexing for Kallisto
[quant] fragment length distribution is truncated gaussian with mean = 200, sd = 20
[index] k-mer length: 31
[index] number of targets: 385,659
[index] number of k-mers: 176,942,276
[quant] running in single-end mode
[quant] will process file 1: tests/data/raw_fastq/pranay.fq.gz
[progress] 37M reads processed (91.3% mappe### featureCounts Column Naming

**Default Behavior:**
- featureCounts uses the full BAM file path as the count column name
- Example: `tests/data/snakemake_results/aligned/pranay.bam`

**Issues with Default:**
1. Long, unwieldy column names
2. Not portable across systems
3. Hard to read in downstream analysis

**Our Solution:**
Added `--outFileNamePrefix` to featureCounts command:
```bash
featureCounts ... --outFileNamePrefix {sample}_d)              done
[quant] processed 38,620,830 reads, 35,276,537 reads pseudoaligned
[   em] quantifying the abundances ... done
[   em] the Expectation-Maximization algorithm ran for 1,688 rounds

# After installation
bulkrnaseq --mode preprocessing [additional args]
# or
python -m bulkrnaseq --mode postprocessing [additional args]

# or
python -m bulkrnaseq --mode processing [additional args]

fix this later
The actual data columns are:
Geneid (gene IDs like ENSG00000223972.5)
Chr (chromosome locations, sometimes multiple locations per gene)
Start (start positions, sometimes multiple per gene)
End (end positions, sometimes multiple per gene)
Strand (+ or - strand info)
Length (numeric value representing gene length)
The last column contains the actual counts from the BAM file (named "tests/data/results/aligned/pranay.bam")
The issue is that our code is looking for a column named 'raw_counts', but this file doesn't have that exact column name. Instead, the counts are in the last column named "tests/data/results/aligned/pranay.bam".

bulkrnaseq --mode pre_post --config config/combined_config.yaml --sample mukul --output tests/data/results/mukul_final_report.md

bulkrnaseq --mode preprocessing --config config/pre.yaml --sample mukul --output mukul_report.md --multi-aligner

bulkrnaseq --mode preprocessing --config config/pre.yaml --sample mukul --output mukul_report.md --aligner kallisto

snakemake -p --cores 1 

# why sample_sheet.csv is needed.


# PRE-PROCESSING
main.py (config file) -> run__preprocessing_pipeline -> workflow -> individual steps

TODO: 
1.) salmon index file
2.) in the end, check default parameters in config file and other locations. like now, default aligner is kallisto

Ok so kallisto alignemnt worked. I have the two files - /Users/mukulsherekar/pythonProject/bulkRNASeq-Project/tests/data/results/preprocessing/aligned_reads_kallisto/mukul_kallisto/abundance.h5 and /Users/mukulsherekar/pythonProject/bulkRNASeq-Project/tests/data/results/preprocessing/aligned_reads_kallisto/mukul_kallisto/abundance.tsv
but there was no feature counts